{
	"information_for_contributors": [
		"This file has been converted from https://github.com/textmate/groovy.tmbundle/blob/master/Syntaxes/groovy.tmLanguage"
	],
	"version": "https://github.com/textmate/groovy.tmbundle/commit/85d8f7c97ae473ccb9473f6c8d27e4ec957f4be1",
	"fileTypes": [
		"gradle"
	],
	"foldingStartMarker": "(\\{\\s*$|^\\s*// \\{\\{\\{)",
	"foldingStopMarker": "^\\s*(\\}|// \\}\\}\\}$)",
	"keyEquivalent": "^~G",
	"name": "Gradle",
	"patterns": [
		{
			"captures": {
				"1": {
					"name": "punctuation.definition.comment.gradle"
				}
			},
			"match": "^(#!).+$\\n",
			"name": "comment.line.hashbang.gradle"
		},
		{
			"captures": {
				"1": {
					"name": "keyword.other.package.gradle"
				},
				"2": {
					"name": "storage.modifier.package.gradle"
				},
				"3": {
					"name": "punctuation.terminator.gradle"
				}
			},
			"match": "^\\s*(package)\\b(?:\\s*([^ ;$]+)\\s*(;)?)?",
			"name": "meta.package.gradle"
		},
		{
			"begin": "(import static)\\b\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.import.static.gradle"
				}
			},
			"captures": {
				"1": {
					"name": "keyword.other.import.gradle"
				},
				"2": {
					"name": "storage.modifier.import.gradle"
				},
				"3": {
					"name": "punctuation.terminator.gradle"
				}
			},
			"contentName": "storage.modifier.import.gradle",
			"end": "\\s*(?:$|(?=%>)(;))",
			"endCaptures": {
				"1": {
					"name": "punctuation.terminator.gradle"
				}
			},
			"name": "meta.import.gradle",
			"patterns": [
				{
					"match": "\\.",
					"name": "punctuation.separator.gradle"
				},
				{
					"match": "\\s",
					"name": "invalid.illegal.character_not_allowed_here.gradle"
				}
			]
		},
		{
			"begin": "(import)\\b\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.import.gradle"
				}
			},
			"captures": {
				"1": {
					"name": "keyword.other.import.gradle"
				},
				"2": {
					"name": "storage.modifier.import.gradle"
				},
				"3": {
					"name": "punctuation.terminator.gradle"
				}
			},
			"contentName": "storage.modifier.import.gradle",
			"end": "\\s*(?:$|(?=%>)|(;))",
			"endCaptures": {
				"1": {
					"name": "punctuation.terminator.gradle"
				}
			},
			"name": "meta.import.gradle",
			"patterns": [
				{
					"match": "\\.",
					"name": "punctuation.separator.gradle"
				},
				{
					"match": "\\s",
					"name": "invalid.illegal.character_not_allowed_here.gradle"
				}
			]
		},
		{
			"captures": {
				"1": {
					"name": "keyword.other.import.gradle"
				},
				"2": {
					"name": "keyword.other.import.static.gradle"
				},
				"3": {
					"name": "storage.modifier.import.gradle"
				},
				"4": {
					"name": "punctuation.terminator.gradle"
				}
			},
			"match": "^\\s*(import)(?:\\s+(static)\\s+)\\b(?:\\s*([^ ;$]+)\\s*(;)?)?",
			"name": "meta.import.gradle"
		},
		{
			"include": "#gradle"
		}
	],
	"repository": {
		"annotations": {
			"patterns": [
				{
					"begin": "(?<!\\.)(@[^ (]+)(\\()",
					"beginCaptures": {
						"1": {
							"name": "storage.type.annotation.gradle"
						},
						"2": {
							"name": "punctuation.definition.annotation-arguments.begin.gradle"
						}
					},
					"end": "(\\))",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.annotation-arguments.end.gradle"
						}
					},
					"name": "meta.declaration.annotation.gradle",
					"patterns": [
						{
							"captures": {
								"1": {
									"name": "constant.other.key.gradle"
								},
								"2": {
									"name": "keyword.operator.assignment.gradle"
								}
							},
							"match": "(\\w*)\\s*(=)"
						},
						{
							"include": "#values"
						},
						{
							"match": ",",
							"name": "punctuation.definition.seperator.gradle"
						}
					]
				},
				{
					"match": "(?<!\\.)@\\S+",
					"name": "storage.type.annotation.gradle"
				}
			]
		},
		"anonymous-classes-and-new": {
			"begin": "\\bnew\\b",
			"beginCaptures": {
				"0": {
					"name": "keyword.control.new.gradle"
				}
			},
			"end": "(?<=\\)|\\])(?!\\s*{)|(?<=})|(?=[;])|$",
			"patterns": [
				{
					"begin": "(\\w+)\\s*(?=\\[)",
					"beginCaptures": {
						"1": {
							"name": "storage.type.gradle"
						}
					},
					"end": "}|(?=\\s*(?:,|;|\\)))|$",
					"patterns": [
						{
							"begin": "\\[",
							"end": "\\]",
							"patterns": [
								{
									"include": "#gradle"
								}
							]
						},
						{
							"begin": "{",
							"end": "(?=})",
							"patterns": [
								{
									"include": "#gradle"
								}
							]
						}
					]
				},
				{
					"begin": "(?=\\w.*\\(?)",
					"end": "(?<=\\))|$",
					"patterns": [
						{
							"include": "#object-types"
						},
						{
							"begin": "\\(",
							"beginCaptures": {
								"1": {
									"name": "storage.type.gradle"
								}
							},
							"end": "\\)",
							"patterns": [
								{
									"include": "#gradle"
								}
							]
						}
					]
				},
				{
					"begin": "{",
					"end": "}",
					"name": "meta.inner-class.gradle",
					"patterns": [
						{
							"include": "#class-body"
						}
					]
				}
			]
		},
		"braces": {
			"begin": "\\{",
			"end": "\\}",
			"patterns": [
				{
					"include": "#gradle-code"
				}
			]
		},
		"class": {
			"begin": "(?=\\w?[\\w\\s]*(?:class|(?:@)?interface|enum)\\s+\\w+)",
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.class.end.gradle"
				}
			},
			"name": "meta.definition.class.gradle",
			"patterns": [
				{
					"include": "#storage-modifiers"
				},
				{
					"include": "#comments"
				},
				{
					"captures": {
						"1": {
							"name": "storage.modifier.gradle"
						},
						"2": {
							"name": "entity.name.type.class.gradle"
						}
					},
					"match": "(class|(?:@)?interface|enum)\\s+(\\w+)",
					"name": "meta.class.identifier.gradle"
				},
				{
					"begin": "extends",
					"beginCaptures": {
						"0": {
							"name": "storage.modifier.extends.gradle"
						}
					},
					"end": "(?={|implements)",
					"name": "meta.definition.class.inherited.classes.gradle",
					"patterns": [
						{
							"include": "#object-types-inherited"
						},
						{
							"include": "#comments"
						}
					]
				},
				{
					"begin": "(implements)\\s",
					"beginCaptures": {
						"1": {
							"name": "storage.modifier.implements.gradle"
						}
					},
					"end": "(?=\\s*extends|\\{)",
					"name": "meta.definition.class.implemented.interfaces.gradle",
					"patterns": [
						{
							"include": "#object-types-inherited"
						},
						{
							"include": "#comments"
						}
					]
				},
				{
					"begin": "{",
					"end": "(?=})",
					"name": "meta.class.body.gradle",
					"patterns": [
						{
							"include": "#class-body"
						}
					]
				}
			]
		},
		"class-body": {
			"patterns": [
				{
					"include": "#enum-values"
				},
				{
					"include": "#constructors"
				},
				{
					"include": "#gradle"
				}
			]
		},
		"closures": {
			"begin": "\\{(?=.*?->)",
			"end": "\\}",
			"patterns": [
				{
					"begin": "(?<=\\{)(?=[^\\}]*?->)",
					"end": "->",
					"endCaptures": {
						"0": {
							"name": "keyword.operator.gradle"
						}
					},
					"patterns": [
						{
							"begin": "(?!->)",
							"end": "(?=->)",
							"name": "meta.closure.parameters.gradle",
							"patterns": [
								{
									"begin": "(?!,|->)",
									"end": "(?=,|->)",
									"name": "meta.closure.parameter.gradle",
									"patterns": [
										{
											"begin": "=",
											"beginCaptures": {
												"0": {
													"name": "keyword.operator.assignment.gradle"
												}
											},
											"end": "(?=,|->)",
											"name": "meta.parameter.default.gradle",
											"patterns": [
												{
													"include": "#gradle-code"
												}
											]
										},
										{
											"include": "#parameters"
										}
									]
								}
							]
						}
					]
				},
				{
					"begin": "(?=[^}])",
					"end": "(?=\\})",
					"patterns": [
						{
							"include": "#gradle-code"
						}
					]
				}
			]
		},
		"comment-block": {
			"begin": "/\\*",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.gradle"
				}
			},
			"end": "\\*/",
			"name": "comment.block.gradle"
		},
		"comments": {
			"patterns": [
				{
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.gradle"
						}
					},
					"match": "/\\*\\*/",
					"name": "comment.block.empty.gradle"
				},
				{
					"include": "text.html.javadoc"
				},
				{
					"include": "#comment-block"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.gradle"
						}
					},
					"match": "(//).*$\\n?",
					"name": "comment.line.double-slash.gradle"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"match": "\\b([A-Z][A-Z0-9_]+)\\b",
					"name": "constant.other.gradle"
				},
				{
					"match": "\\b(true|false|null)\\b",
					"name": "constant.language.gradle"
				}
			]
		},
		"constructors": {
			"applyEndPatternLast": 1,
			"begin": "(?<=;|^)(?=\\s*(?:(?:private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final)\\s+)*[A-Z]\\w*\\()",
			"end": "}",
			"patterns": [
				{
					"include": "#method-content"
				}
			]
		},
		"enum-values": {
			"patterns": [
				{
					"begin": "(?<=;|^)\\s*\\b([A-Z0-9_]+)(?=\\s*(?:,|;|}|\\(|$))",
					"beginCaptures": {
						"1": {
							"name": "constant.enum.name.gradle"
						}
					},
					"end": ",|;|(?=})|^(?!\\s*\\w+\\s*(?:,|$))",
					"patterns": [
						{
							"begin": "\\(",
							"end": "\\)",
							"name": "meta.enum.value.gradle",
							"patterns": [
								{
									"match": ",",
									"name": "punctuation.definition.seperator.parameter.gradle"
								},
								{
									"include": "#gradle-code"
								}
							]
						}
					]
				}
			]
		},
		"gradle": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#class"
				},
				{
					"include": "#variables"
				},
				{
					"include": "#methods"
				},
				{
					"include": "#annotations"
				},
				{
					"include": "#gradle-code"
				}
			]
		},
		"gradle-code": {
			"patterns": [
				{
					"include": "#gradle-code-minus-map-keys"
				},
				{
					"include": "#map-keys"
				}
			]
		},
		"gradle-code-minus-map-keys": {
			"comment": "In some situations, maps can't be declared without enclosing []'s, \n\t\t\t\ttherefore we create a collection of everything but that",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#annotations"
				},
				{
					"include": "#support-functions"
				},
				{
					"include": "#keyword-language"
				},
				{
					"include": "#values"
				},
				{
					"include": "#anonymous-classes-and-new"
				},
				{
					"include": "#keyword-operator"
				},
				{
					"include": "#types"
				},
				{
					"include": "#storage-modifiers"
				},
				{
					"include": "#parens"
				},
				{
					"include": "#closures"
				},
				{
					"include": "#braces"
				}
			]
		},
		"keyword": {
			"patterns": [
				{
					"include": "#keyword-operator"
				},
				{
					"include": "#keyword-language"
				}
			]
		},
		"keyword-language": {
			"patterns": [
				{
					"match": "\\b(try|catch|finally|throw)\\b",
					"name": "keyword.control.exception.gradle"
				},
				{
					"match": "\\b((?<!\\.)(?:return|break|continue|default|do|while|for|switch|if|else))\\b",
					"name": "keyword.control.gradle"
				},
				{
					"begin": "\\bcase\\b",
					"beginCaptures": {
						"0": {
							"name": "keyword.control.gradle"
						}
					},
					"end": ":",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.case-terminator.gradle"
						}
					},
					"name": "meta.case.gradle",
					"patterns": [
						{
							"include": "#gradle-code-minus-map-keys"
						}
					]
				},
				{
					"begin": "\\b(assert)\\s",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.assert.gradle"
						}
					},
					"end": "$|;|}",
					"name": "meta.declaration.assertion.gradle",
					"patterns": [
						{
							"match": ":",
							"name": "keyword.operator.assert.expression-seperator.gradle"
						},
						{
							"include": "#gradle-code-minus-map-keys"
						}
					]
				},
				{
					"match": "\\b(throws)\\b",
					"name": "keyword.other.throws.gradle"
				}
			]
		},
		"keyword-operator": {
			"patterns": [
				{
					"match": "\\b(as)\\b",
					"name": "keyword.operator.as.gradle"
				},
				{
					"match": "\\b(in)\\b",
					"name": "keyword.operator.in.gradle"
				},
				{
					"match": "\\?\\:",
					"name": "keyword.operator.elvis.gradle"
				},
				{
					"match": "\\*\\:",
					"name": "keyword.operator.spreadmap.gradle"
				},
				{
					"match": "\\.\\.",
					"name": "keyword.operator.range.gradle"
				},
				{
					"match": "\\->",
					"name": "keyword.operator.arrow.gradle"
				},
				{
					"match": "<<",
					"name": "keyword.operator.leftshift.gradle"
				},
				{
					"match": "(?<=\\S)\\.(?=\\S)",
					"name": "keyword.operator.navigation.gradle"
				},
				{
					"match": "(?<=\\S)\\?\\.(?=\\S)",
					"name": "keyword.operator.safe-navigation.gradle"
				},
				{
					"begin": "\\?",
					"beginCaptures": {
						"0": {
							"name": "keyword.operator.ternary.gradle"
						}
					},
					"end": "(?=$|\\)|}|])",
					"name": "meta.evaluation.ternary.gradle",
					"patterns": [
						{
							"match": ":",
							"name": "keyword.operator.ternary.expression-seperator.gradle"
						},
						{
							"include": "#gradle-code-minus-map-keys"
						}
					]
				},
				{
					"match": "==~",
					"name": "keyword.operator.match.gradle"
				},
				{
					"match": "=~",
					"name": "keyword.operator.find.gradle"
				},
				{
					"match": "\\b(instanceof)\\b",
					"name": "keyword.operator.instanceof.gradle"
				},
				{
					"match": "(===|==|!=|<=|>=|<=>|<>|<|>|<<)",
					"name": "keyword.operator.comparison.gradle"
				},
				{
					"match": "=",
					"name": "keyword.operator.assignment.gradle"
				},
				{
					"match": "(\\-\\-|\\+\\+)",
					"name": "keyword.operator.increment-decrement.gradle"
				},
				{
					"match": "(\\-|\\+|\\*|\\/|%)",
					"name": "keyword.operator.arithmetic.gradle"
				},
				{
					"match": "(!|&&|\\|\\|)",
					"name": "keyword.operator.logical.gradle"
				}
			]
		},
		"language-variables": {
			"patterns": [
				{
					"match": "\\b(this|super)\\b",
					"name": "variable.language.gradle"
				}
			]
		},
		"map-keys": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "constant.other.key.gradle"
						},
						"2": {
							"name": "punctuation.definition.seperator.key-value.gradle"
						}
					},
					"match": "(\\w+)\\s*(:)"
				}
			]
		},
		"method-call": {
			"begin": "([\\w$]+)(\\()",
			"beginCaptures": {
				"1": {
					"name": "meta.method.gradle"
				},
				"2": {
					"name": "punctuation.definition.method-parameters.begin.gradle"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.method-parameters.end.gradle"
				}
			},
			"name": "meta.method-call.gradle",
			"patterns": [
				{
					"match": ",",
					"name": "punctuation.definition.seperator.parameter.gradle"
				},
				{
					"include": "#gradle-code"
				}
			]
		},
		"method-content": {
			"patterns": [
				{
					"match": "\\s"
				},
				{
					"include": "#annotations"
				},
				{
					"begin": "(?=(?:\\w|<)[^\\(]*\\s+(?:[\\w$]|<)+\\s*\\()",
					"end": "(?=[\\w$]+\\s*\\()",
					"name": "meta.method.return-type.java",
					"patterns": [
						{
							"include": "#storage-modifiers"
						},
						{
							"include": "#types"
						}
					]
				},
				{
					"begin": "([\\w$]+)\\s*\\(",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function.java"
						}
					},
					"end": "\\)",
					"name": "meta.definition.method.signature.java",
					"patterns": [
						{
							"begin": "(?=[^)])",
							"end": "(?=\\))",
							"name": "meta.method.parameters.gradle",
							"patterns": [
								{
									"begin": "(?=[^,)])",
									"end": "(?=,|\\))",
									"name": "meta.method.parameter.gradle",
									"patterns": [
										{
											"match": ",",
											"name": "punctuation.definition.separator.gradle"
										},
										{
											"begin": "=",
											"beginCaptures": {
												"0": {
													"name": "keyword.operator.assignment.gradle"
												}
											},
											"end": "(?=,|\\))",
											"name": "meta.parameter.default.gradle",
											"patterns": [
												{
													"include": "#gradle-code"
												}
											]
										},
										{
											"include": "#parameters"
										}
									]
								}
							]
						}
					]
				},
				{
					"begin": "(?=<)",
					"end": "(?=\\s)",
					"name": "meta.method.paramerised-type.gradle",
					"patterns": [
						{
							"begin": "<",
							"end": ">",
							"name": "storage.type.parameters.gradle",
							"patterns": [
								{
									"include": "#types"
								},
								{
									"match": ",",
									"name": "punctuation.definition.seperator.gradle"
								}
							]
						}
					]
				},
				{
					"begin": "throws",
					"beginCaptures": {
						"0": {
							"name": "storage.modifier.gradle"
						}
					},
					"end": "(?={|;)|^(?=\\s*(?:[^{\\s]|$))",
					"name": "meta.throwables.gradle",
					"patterns": [
						{
							"include": "#object-types"
						}
					]
				},
				{
					"begin": "{",
					"end": "(?=})",
					"name": "meta.method.body.java",
					"patterns": [
						{
							"include": "#gradle-code"
						}
					]
				}
			]
		},
		"methods": {
			"applyEndPatternLast": 1,
			"begin": "(?x:(?<=;|^|{)(?=\\s*\n                (?:\n                    (?:private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final) # visibility/modifier\n                        |\n                    (?:def)\n                        |\n                    (?:\n                        (?:\n                            (?:void|boolean|byte|char|short|int|float|long|double)\n                                |\n                            (?:@?(?:[a-zA-Z]\\w*\\.)*[A-Z]+\\w*) # object type\n                        )\n                        [\\[\\]]*\n                        (?:<.*>)?\n                    ) \n                    \n                )\n                \\s+\n                ([^=]+\\s+)?\\w+\\s*\\(\n\t\t\t))",
			"end": "}|(?=[^{])",
			"name": "meta.definition.method.gradle",
			"patterns": [
				{
					"include": "#method-content"
				}
			]
		},
		"nest_curly": {
			"begin": "\\{",
			"captures": {
				"0": {
					"name": "punctuation.section.scope.gradle"
				}
			},
			"end": "\\}",
			"patterns": [
				{
					"include": "#nest_curly"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"match": "((0(x|X)[0-9a-fA-F]*)|(\\+|-)?\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)([LlFfUuDdg]|UL|ul)?\\b",
					"name": "constant.numeric.gradle"
				}
			]
		},
		"object-types": {
			"patterns": [
				{
					"begin": "\\b((?:[a-z]\\w*\\.)*(?:[A-Z]+\\w*[a-z]+\\w*|UR[LI]))<",
					"end": ">|[^\\w\\s,\\?<\\[\\]]",
					"name": "storage.type.generic.gradle",
					"patterns": [
						{
							"include": "#object-types"
						},
						{
							"begin": "<",
							"comment": "This is just to support <>'s with no actual type prefix",
							"end": ">|[^\\w\\s,\\[\\]<]",
							"name": "storage.type.generic.gradle"
						}
					]
				},
				{
					"begin": "\\b((?:[a-z]\\w*\\.)*[A-Z]+\\w*[a-z]+\\w*)(?=\\[)",
					"end": "(?=[^\\]\\s])",
					"name": "storage.type.object.array.gradle",
					"patterns": [
						{
							"begin": "\\[",
							"end": "\\]",
							"patterns": [
								{
									"include": "#gradle"
								}
							]
						}
					]
				},
				{
					"match": "\\b(?:[a-zA-Z]\\w*\\.)*(?:[A-Z]+\\w*[a-z]+\\w*|UR[LI])\\b",
					"name": "storage.type.gradle"
				}
			]
		},
		"object-types-inherited": {
			"patterns": [
				{
					"begin": "\\b((?:[a-zA-Z]\\w*\\.)*[A-Z]+\\w*[a-z]+\\w*)<",
					"end": ">|[^\\w\\s,\\?<\\[\\]]",
					"name": "entity.other.inherited-class.gradle",
					"patterns": [
						{
							"include": "#object-types-inherited"
						},
						{
							"begin": "<",
							"comment": "This is just to support <>'s with no actual type prefix",
							"end": ">|[^\\w\\s,\\[\\]<]",
							"name": "storage.type.generic.gradle"
						}
					]
				},
				{
					"captures": {
						"1": {
							"name": "keyword.operator.dereference.gradle"
						}
					},
					"match": "\\b(?:[a-zA-Z]\\w*(\\.))*[A-Z]+\\w*[a-z]+\\w*\\b",
					"name": "entity.other.inherited-class.gradle"
				}
			]
		},
		"parameters": {
			"patterns": [
				{
					"include": "#annotations"
				},
				{
					"include": "#storage-modifiers"
				},
				{
					"include": "#types"
				},
				{
					"match": "\\w+",
					"name": "variable.parameter.method.gradle"
				}
			]
		},
		"parens": {
			"begin": "\\(",
			"end": "\\)",
			"patterns": [
				{
					"include": "#gradle-code"
				}
			]
		},
		"primitive-arrays": {
			"patterns": [
				{
					"match": "\\b(?:void|boolean|byte|char|short|int|float|long|double)(\\[\\])*\\b",
					"name": "storage.type.primitive.array.gradle"
				}
			]
		},
		"primitive-types": {
			"patterns": [
				{
					"match": "\\b(?:void|boolean|byte|char|short|int|float|long|double)\\b",
					"name": "storage.type.primitive.gradle"
				}
			]
		},
		"regexp": {
			"patterns": [
				{
					"begin": "/(?=[^/]+/([^>]|$))",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.regexp.begin.gradle"
						}
					},
					"end": "/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.regexp.end.gradle"
						}
					},
					"name": "string.regexp.gradle",
					"patterns": [
						{
							"match": "\\\\.",
							"name": "constant.character.escape.gradle"
						}
					]
				},
				{
					"begin": "~\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.regexp.begin.gradle"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.regexp.end.gradle"
						}
					},
					"name": "string.regexp.compiled.gradle",
					"patterns": [
						{
							"match": "\\\\.",
							"name": "constant.character.escape.gradle"
						}
					]
				}
			]
		},
		"storage-modifiers": {
			"patterns": [
				{
					"match": "\\b(private|protected|public)\\b",
					"name": "storage.modifier.access-control.gradle"
				},
				{
					"match": "\\b(static)\\b",
					"name": "storage.modifier.static.gradle"
				},
				{
					"match": "\\b(final)\\b",
					"name": "storage.modifier.final.gradle"
				},
				{
					"match": "\\b(native|synchronized|abstract|threadsafe|transient)\\b",
					"name": "storage.modifier.other.gradle"
				}
			]
		},
		"string-quoted-double": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.gradle"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.gradle"
				}
			},
			"name": "string.quoted.double.gradle",
			"patterns": [
				{
					"include": "#string-quoted-double-contents"
				}
			]
		},
		"string-quoted-double-contents": {
			"patterns": [
				{
					"match": "\\\\.",
					"name": "constant.character.escape.gradle"
				},
				{
					"applyEndPatternLast": 1,
					"begin": "\\$\\w",
					"end": "(?=\\W)",
					"name": "variable.other.interpolated.gradle",
					"patterns": [
						{
							"match": "\\w",
							"name": "variable.other.interpolated.gradle"
						},
						{
							"match": "\\.",
							"name": "keyword.other.dereference.gradle"
						}
					]
				},
				{
					"begin": "\\$\\{",
					"captures": {
						"0": {
							"name": "punctuation.section.embedded.gradle"
						}
					},
					"end": "\\}",
					"name": "source.gradle.embedded.source",
					"patterns": [
						{
							"include": "#nest_curly"
						}
					]
				}
			]
		},
		"string-quoted-double-multiline": {
			"begin": "\"\"\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.gradle"
				}
			},
			"end": "\"\"\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.gradle"
				}
			},
			"name": "string.quoted.double.multiline.gradle",
			"patterns": [
				{
					"include": "#string-quoted-double-contents"
				}
			]
		},
		"string-quoted-single": {
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.gradle"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.gradle"
				}
			},
			"name": "string.quoted.single.gradle",
			"patterns": [
				{
					"include": "#string-quoted-single-contents"
				}
			]
		},
		"string-quoted-single-contents": {
			"patterns": [
				{
					"match": "\\\\.",
					"name": "constant.character.escape.gradle"
				}
			]
		},
		"string-quoted-single-multiline": {
			"begin": "'''",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.gradle"
				}
			},
			"end": "'''",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.gradle"
				}
			},
			"name": "string.quoted.single.multiline.gradle",
			"patterns": [
				{
					"include": "#string-quoted-single-contents"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"include": "#string-quoted-double-multiline"
				},
				{
					"include": "#string-quoted-single-multiline"
				},
				{
					"include": "#string-quoted-double"
				},
				{
					"include": "#string-quoted-single"
				},
				{
					"include": "#regexp"
				}
			]
		},
		"structures": {
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.structure.begin.gradle"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.structure.end.gradle"
				}
			},
			"name": "meta.structure.gradle",
			"patterns": [
				{
					"include": "#gradle-code"
				},
				{
					"match": ",",
					"name": "punctuation.definition.separator.gradle"
				}
			]
		},
		"support-functions": {
			"patterns": [
				{
					"match": "(?x)\\b(?:sprintf|print(?:f|ln)?)\\b",
					"name": "support.function.print.gradle"
				},
				{
					"match": "(?x)\\b(?:shouldFail|fail(?:NotEquals)?|ass(?:ume|ert(?:S(?:cript|ame)|N(?:ot(?:Same|\n\t\t\t\t\tNull)|ull)|Contains|T(?:hat|oString|rue)|Inspect|Equals|False|Length|\n\t\t\t\t\tArrayEquals)))\\b",
					"name": "support.function.testing.gradle"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"match": "\\b(def)\\b",
					"name": "storage.type.def.gradle"
				},
				{
					"include": "#primitive-types"
				},
				{
					"include": "#primitive-arrays"
				},
				{
					"include": "#object-types"
				}
			]
		},
		"values": {
			"patterns": [
				{
					"include": "#language-variables"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#types"
				},
				{
					"include": "#structures"
				},
				{
					"include": "#method-call"
				}
			]
		},
		"variables": {
			"applyEndPatternLast": 1,
			"patterns": [
				{
					"begin": "(?x:(?=\n                        (?:\n                            (?:private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final) # visibility/modifier\n                                |\n                            (?:def)\n                                |\n                            (?:void|boolean|byte|char|short|int|float|long|double)\n                                |\n                            (?:(?:[a-z]\\w*\\.)*[A-Z]+\\w*) # object type\n                        )\n                        \\s+\n                        [\\w\\d_<>\\[\\],\\s]+\n                        (?:=|$)\n                        \n        \t\t\t))",
					"end": ";|$",
					"name": "meta.definition.variable.gradle",
					"patterns": [
						{
							"match": "\\s"
						},
						{
							"captures": {
								"1": {
									"name": "constant.variable.gradle"
								}
							},
							"match": "([A-Z_0-9]+)\\s+(?=\\=)"
						},
						{
							"captures": {
								"1": {
									"name": "meta.definition.variable.name.gradle"
								}
							},
							"match": "(\\w[^\\s,]*)\\s+(?=\\=)"
						},
						{
							"begin": "=",
							"beginCaptures": {
								"0": {
									"name": "keyword.operator.assignment.gradle"
								}
							},
							"end": "$",
							"patterns": [
								{
									"include": "#gradle-code"
								}
							]
						},
						{
							"captures": {
								"1": {
									"name": "meta.definition.variable.name.gradle"
								}
							},
							"match": "(\\w[^\\s=]*)(?=\\s*($|;))"
						},
						{
							"include": "#gradle-code"
						}
					]
				}
			]
		}
	},
	"scopeName": "source.gradle",
	"uuid": "B3A64888-EBBB-4436-8D9E-F1169C5D7613"
}